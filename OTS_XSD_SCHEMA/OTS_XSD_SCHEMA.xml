<?xml version="1.0" encoding="UTF-8"?>
<?usoft-xml version="1.0" action="multi-tables-import"?><MultiImport>
<Component_Constructors documentName="Component Constructors">
<T_RDMI_COMPONENT_CONSTRUCTOR COMPONENT_NAME="OTS_XSD_SCHEMA" DESCRIPTION="This component validates xml against an XSD schema.&#13;&#10;&#13;&#10;Call example: &#13;&#10;&#9;select OTS_XSD_SCHEMA('filepath to yourschema.xsd', ''filepath to yourxml.xml)&#13;&#10;&#13;&#10;&#13;&#10;Both the XSD schema and xml can be passe as inline arguments. The schema will then be saved in a temporary file in the users temp directory.&#13;&#10;Call example:&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( '&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&#13;&#10;&#9;&lt;xs:element name=&quot;r&quot;&gt;&#13;&#10;&#9;&#9;&lt;xs:complexType&gt;&#13;&#10;&#9;&#9;&#9;&lt;xs:sequence&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;author&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;gender&quot; default=&quot;male&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:restriction base=&quot;xs:string&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:enumeration value=&quot;male&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/xs:restriction&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;/xs:element&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;birthdate&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:restriction base=&quot;xs:date&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;/xs:element&gt;&#13;&#10;&#9;&#9;&#9;&lt;/xs:sequence&gt;&#13;&#10;&#9;&#9;&#9;&lt;xs:attribute name=&quot;version&quot; use=&quot;required&quot;/&gt;&#13;&#10;&#9;&#9;&lt;/xs:complexType&gt;&#13;&#10;&#9;&lt;/xs:element&gt;&#13;&#10;&lt;/xs:schema&gt;', &#13;&#10;&#13;&#10; '&lt;r version=&quot;1.0&quot;&gt;&lt;author&gt;&lt;/author&gt;&lt;gender&gt;changethis to male or female&lt;/gender&gt;&lt;birthdate&gt;2002-09-24&lt;/birthdate&gt;&lt;/r&gt;' )&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( 'C:\Development\Digitrage\Standaard.xsd',  'c:\development\digitrage\Goed.xml' )&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( 'C:\Development\Digitrage\Standaard.xsd',  'c:\development\digitrage\Invalid.xml' )" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="N" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" CONSTRUCTOR_SQL="" ACTIVE="N"/>
</Component_Constructors>
<Components documentName="Components">
<T_RDMI_COMPONENT COMPONENT_NAME="OTS_XSD_SCHEMA" DESCRIPTION="This component validates xml against an XSD schema.&#13;&#10;&#13;&#10;Call example: &#13;&#10;&#9;select OTS_XSD_SCHEMA('filepath to yourschema.xsd', ''filepath to yourxml.xml)&#13;&#10;&#13;&#10;&#13;&#10;Both the XSD schema and xml can be passe as inline arguments. The schema will then be saved in a temporary file in the users temp directory.&#13;&#10;Call example:&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( '&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&#13;&#10;&#9;&lt;xs:element name=&quot;r&quot;&gt;&#13;&#10;&#9;&#9;&lt;xs:complexType&gt;&#13;&#10;&#9;&#9;&#9;&lt;xs:sequence&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;author&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;gender&quot; default=&quot;male&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:restriction base=&quot;xs:string&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:enumeration value=&quot;male&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/xs:restriction&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;/xs:element&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;birthdate&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:restriction base=&quot;xs:date&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;/xs:element&gt;&#13;&#10;&#9;&#9;&#9;&lt;/xs:sequence&gt;&#13;&#10;&#9;&#9;&#9;&lt;xs:attribute name=&quot;version&quot; use=&quot;required&quot;/&gt;&#13;&#10;&#9;&#9;&lt;/xs:complexType&gt;&#13;&#10;&#9;&lt;/xs:element&gt;&#13;&#10;&lt;/xs:schema&gt;', &#13;&#10;&#13;&#10; '&lt;r version=&quot;1.0&quot;&gt;&lt;author&gt;&lt;/author&gt;&lt;gender&gt;changethis to male or female&lt;/gender&gt;&lt;birthdate&gt;2002-09-24&lt;/birthdate&gt;&lt;/r&gt;' )&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( 'C:\Development\Digitrage\Standaard.xsd',  'c:\development\digitrage\Goed.xml' )&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( 'C:\Development\Digitrage\Standaard.xsd',  'c:\development\digitrage\Invalid.xml' )" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="N" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y"/>
</Components>
<DotNet_Components documentName="DotNet Components">
<T_RDMI_DOTNET_COMPONENT COMPONENT_NAME="OTS_XSD_SCHEMA" DESCRIPTION="This component validates xml against an XSD schema.&#13;&#10;&#13;&#10;Call example: &#13;&#10;&#9;select OTS_XSD_SCHEMA('filepath to yourschema.xsd', ''filepath to yourxml.xml)&#13;&#10;&#13;&#10;&#13;&#10;Both the XSD schema and xml can be passe as inline arguments. The schema will then be saved in a temporary file in the users temp directory.&#13;&#10;Call example:&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( '&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&#13;&#10;&#9;&lt;xs:element name=&quot;r&quot;&gt;&#13;&#10;&#9;&#9;&lt;xs:complexType&gt;&#13;&#10;&#9;&#9;&#9;&lt;xs:sequence&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;author&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;gender&quot; default=&quot;male&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:restriction base=&quot;xs:string&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:enumeration value=&quot;male&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/xs:restriction&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;/xs:element&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;xs:element name=&quot;birthdate&quot;&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;xs:restriction base=&quot;xs:date&quot;/&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/xs:simpleType&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;/xs:element&gt;&#13;&#10;&#9;&#9;&#9;&lt;/xs:sequence&gt;&#13;&#10;&#9;&#9;&#9;&lt;xs:attribute name=&quot;version&quot; use=&quot;required&quot;/&gt;&#13;&#10;&#9;&#9;&lt;/xs:complexType&gt;&#13;&#10;&#9;&lt;/xs:element&gt;&#13;&#10;&lt;/xs:schema&gt;', &#13;&#10;&#13;&#10; '&lt;r version=&quot;1.0&quot;&gt;&lt;author&gt;&lt;/author&gt;&lt;gender&gt;changethis to male or female&lt;/gender&gt;&lt;birthdate&gt;2002-09-24&lt;/birthdate&gt;&lt;/r&gt;' )&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( 'C:\Development\Digitrage\Standaard.xsd',  'c:\development\digitrage\Goed.xml' )&#13;&#10;&#13;&#10;SELECT OTS_XSD_SCHEMA.VALIDATE( 'C:\Development\Digitrage\Standaard.xsd',  'c:\development\digitrage\Invalid.xml' )" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="N" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" ASSEMBLYREFS="System.Xml.dll" PROGRAM_SOURCE="using System;&#13;&#10;using System.IO;&#13;&#10;using System.Text;&#13;&#10;using System.Collections.Generic;&#13;&#10;using System.Xml;&#13;&#10;using System.Xml.Schema;&#13;&#10;&#13;&#10;class OTS_XSD_SCHEMA&#13;&#10;{&#13;&#10;&#9;public string Validate(string schemafile, string xmlfile)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;if(schemafile.StartsWith(&quot;&lt;&quot;))&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;string schemafilepath = System.IO.Path.GetTempFileName();&#13;&#10;&#9;&#9;&#9;File.WriteAllText(schemafilepath, schemafile);&#13;&#10;&#9;&#9;&#9;schemafile = schemafilepath;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;Schema  schema= new Schema(schemafile); //if missing: Value cannot be null. Parameter name: schemaUri&#13;&#10;&#9;&#9;List&lt;string&gt; flaws = schema.Validate(xmlfile);&#13;&#10;&#9;&#9;if(flaws.Count &gt; 0)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;StringBuilder result = new StringBuilder();&#13;&#10;&#9;&#9;&#9;foreach (string flaw in flaws)&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;result.Append(flaw).Append(Environment.NewLine);&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;return result.ToString(); &#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return &quot;Valid&quot;;&#13;&#10;&#9;}&#13;&#10;}&#13;&#10;&#13;&#10;class Schema&#13;&#10;{&#13;&#10;&#9;List&lt;string&gt; m_flaws;&#13;&#10;&#9;string m_schemaxml;&#13;&#10;&#9;public Schema(string schema)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;m_schemaxml = schema;&#13;&#10;&#9;}&#13;&#10;&#9;private  void ValidationCallBack(object sender,  ValidationEventArgs e) &#13;&#10;&#9;{&#13;&#10;&#9;&#9;m_flaws.Add(e.Message);&#13;&#10;&#9;} &#13;&#10;&#9;public  List&lt;string&gt; Validate(string xmldoc)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try &#13;&#10;&#9;&#9;{ &#13;&#10;&#9;&#9;&#9;m_flaws = new List&lt;string&gt;();&#13;&#10;&#9; &#9;&#9;XmlDocument xmld=new XmlDocument (); &#13;&#10;&#9;&#9;&#9;if (xmldoc.StartsWith(&quot;&lt;&quot;))&#13;&#10;&#9;&#9;&#9;&#9;xmld.LoadXml(xmldoc); &#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;xmld.Load(xmldoc); &#13;&#10;&#9;&#9;&#9;xmld.Schemas.Add(null, m_schemaxml); &#13;&#10;&#9;&#9;&#9;xmld.Validate(ValidationCallBack); &#13;&#10;&#9;&#9;&#9;return m_flaws;&#13;&#10;&#9;&#9;} &#13;&#10;&#9;&#9;catch (Exception ex)&#13;&#10;&#9;&#9;{ &#13;&#10;&#9;&#9;&#9;List&lt;string&gt; result = new List&lt;string&gt;();&#13;&#10;&#9;&#9;&#9;result.Add(ex.Message);&#13;&#10;&#9;&#9;&#9;return result;&#13;&#10;&#9;&#9;} &#13;&#10;&#9;}&#13;&#10;}" DOTNET_ACTIVE="Y" LANGUAGE="C#" ORIGIN="" APP_DOMAIN="Default"/>
</DotNet_Components>
<Methods documentName="Methods">
<T_RDMI_METHOD COMPONENT_NAME="OTS_XSD_SCHEMA" METHOD_NAME="OTS_XSD_SCHEMA" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="OTS_XSD_SCHEMA" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
<T_RDMI_METHOD COMPONENT_NAME="OTS_XSD_SCHEMA" METHOD_NAME="VALIDATE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="Validate" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
</Methods>
<Parameters documentName="Parameters">
<T_RDMI_PARAMETER COMPONENT_NAME="OTS_XSD_SCHEMA" PARAMETER_SEQNO="0" METHOD_NAME="VALIDATE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_Validate" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
<T_RDMI_PARAMETER COMPONENT_NAME="OTS_XSD_SCHEMA" PARAMETER_SEQNO="1" METHOD_NAME="VALIDATE" METHOD_SEQNO="1" PARAMETER_NAME="schemafile" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
<T_RDMI_PARAMETER COMPONENT_NAME="OTS_XSD_SCHEMA" PARAMETER_SEQNO="2" METHOD_NAME="VALIDATE" METHOD_SEQNO="1" PARAMETER_NAME="xmlfile" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
</Parameters>
</MultiImport>
