<?xml version="1.0" encoding="utf-8"?>
<?usoft-xml version="1.0" action="multi-tables-import"?>
<MultiImport>
  <Component_Constructors>
    <T_RDMI_COMPONENT_CONSTRUCTOR COMPONENT_NAME="OTS_REGEXVALIDATOR" DESCRIPTION="C# component for testing a regular expression pattern using the RegularExpressions functionality within .NET. &#xD;&#xA;This component can be used as an alternative for the Regular Expression Patterns in Domains. For example, you can call this method in a Domain Constraint to implement custom messages based on regular expressions matching. An example of a Domain an Domain Constraint is included in this OTS component. The Domain constraint validates an email address domain. More information on Regular Expressions for Domains is explained here:&#xD;&#xA;&#xD;&#xA;https://community.usoft.com/domains-66/allowed-values-248&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Uses the System.Text.RegularExpressions Namespace.&#xD;&#xA;&#xD;&#xA;The static method Validate expects two parameters:&#xD;&#xA;&#xD;&#xA;rx of type string, the regular expression pattern to match&#xD;&#xA;input of type string, the string to be matched.&#xD;&#xA;&#xD;&#xA;returns a boolean for the match result." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="N" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" CONSTRUCTOR_SQL="" ACTIVE="N" />
  </Component_Constructors>
  <Components>
    <T_RDMI_COMPONENT COMPONENT_NAME="OTS_REGEXVALIDATOR" DESCRIPTION="C# component for testing a regular expression pattern using the RegularExpressions functionality within .NET. &#xD;&#xA;This component can be used as an alternative for the Regular Expression Patterns in Domains. For example, you can call this method in a Domain Constraint to implement custom messages based on regular expressions matching. An example of a Domain an Domain Constraint is included in this OTS component. The Domain constraint validates an email address domain. More information on Regular Expressions for Domains is explained here:&#xD;&#xA;&#xD;&#xA;https://community.usoft.com/domains-66/allowed-values-248&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Uses the System.Text.RegularExpressions Namespace.&#xD;&#xA;&#xD;&#xA;The static method Validate expects two parameters:&#xD;&#xA;&#xD;&#xA;rx of type string, the regular expression pattern to match&#xD;&#xA;input of type string, the string to be matched.&#xD;&#xA;&#xD;&#xA;returns a boolean for the match result." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="N" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" />
  </Components>
  <Domain_Constraints>
    <T_DOMAIN_CONSTRAINT DOMAIN_NAME="OTS_EMAIL_ADDRESS" CONSTRAINT_NAME="OTS_RX_EMAIL" SEQUENCE="0" ACTIVE="Y" MESS_TEXT="invalid email used" CORRECTION="" SQL_CONDITION="OTS_RegexValidator.Validate(&#xD;&#xA;'^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$',DOMAIN) = 0" HELP_TOPIC="" />
  </Domain_Constraints>
  <Domains>
    <T_DOMAIN DOMAIN_NAME="OTS_EMAIL_ADDRESS" SUPER_DOMAIN="" DATATYPE="NVARCHAR" TOTAL_LENGTH="100" LENGTH_AFTER_PERIOD="" F_DATATYPE="CHAR" F_TOTAL_LENGTH="1" F_LENGTH_AFTER_PERIOD="" DISPLAY_LENGTH="30" UPPERCASE="N" FIXED_LENGTH="N" IS_SEQNO="N" DEF_VALUE="" RANGE_LOW="" RANGE_HIGH="" HELP_TEXT="" IOFORMAT="" DBFORMAT="" DESCR="" PERC_FULL="50" SEQNO_COMPONENT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" REGEXP="" />
  </Domains>
  <DotNet_Components>
    <T_RDMI_DOTNET_COMPONENT COMPONENT_NAME="OTS_REGEXVALIDATOR" DESCRIPTION="C# component for testing a regular expression pattern using the RegularExpressions functionality within .NET. &#xD;&#xA;This component can be used as an alternative for the Regular Expression Patterns in Domains. For example, you can call this method in a Domain Constraint to implement custom messages based on regular expressions matching. An example of a Domain an Domain Constraint is included in this OTS component. The Domain constraint validates an email address domain. More information on Regular Expressions for Domains is explained here:&#xD;&#xA;&#xD;&#xA;https://community.usoft.com/domains-66/allowed-values-248&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Uses the System.Text.RegularExpressions Namespace.&#xD;&#xA;&#xD;&#xA;The static method Validate expects two parameters:&#xD;&#xA;&#xD;&#xA;rx of type string, the regular expression pattern to match&#xD;&#xA;input of type string, the string to be matched.&#xD;&#xA;&#xD;&#xA;returns a boolean for the match result." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="N" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" ASSEMBLYREFS="System.dll" PROGRAM_SOURCE="using System.Text.RegularExpressions;&#xD;&#xA;&#xD;&#xA;public static class OTS_RegexValidator {&#xD;&#xA;&#xD;&#xA;  public static bool Validate(string rx, string input) {&#xD;&#xA;&#xD;&#xA;    Regex regex = new Regex(@rx);&#xD;&#xA;    Match match = regex.Match(input);&#xD;&#xA;    return match.Success;&#xD;&#xA;  }&#xD;&#xA;}" DOTNET_ACTIVE="Y" LANGUAGE="C#" ORIGIN="" APP_DOMAIN="Default" />
  </DotNet_Components>
  <Methods>
    <T_RDMI_METHOD COMPONENT_NAME="OTS_REGEXVALIDATOR" METHOD_NAME="VALIDATE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="Validate" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" />
  </Methods>
  <Parameters>
    <T_RDMI_PARAMETER COMPONENT_NAME="OTS_REGEXVALIDATOR" PARAMETER_SEQNO="0" METHOD_NAME="VALIDATE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_Validate" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" />
    <T_RDMI_PARAMETER COMPONENT_NAME="OTS_REGEXVALIDATOR" PARAMETER_SEQNO="1" METHOD_NAME="VALIDATE" METHOD_SEQNO="1" PARAMETER_NAME="rx" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" />
    <T_RDMI_PARAMETER COMPONENT_NAME="OTS_REGEXVALIDATOR" PARAMETER_SEQNO="2" METHOD_NAME="VALIDATE" METHOD_SEQNO="1" PARAMETER_NAME="input" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" />
  </Parameters>
</MultiImport>