<?xml version="1.0" encoding="UTF-8"?><?usoft-xml version="1.0" action="multi-tables-import"?><MultiImport><Component_Constructors documentName="Component Constructors"><T_RDMI_COMPONENT_CONSTRUCTOR COMPONENT_NAME="OTS_FILESYSTEM" DESCRIPTION="The OTS_FILESYSTEM interacts with the Windows File system.&#13;&#10;&#13;&#10;Method call examples:&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.pathcombine('c:\temp', 'aa\bb', 'cc', 'foo.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileExists('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryExists('c:\temp\xyz')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.directoryname('c:\temp\abc\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileName('c:\temp\abc\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileExtension('c:\temp\abc\def.png')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.ReadTextFile('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.ReadBinaryFileToBase64('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.AccesTime('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.Modified('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.NewestFile( 'c:\temp\WINFILES_USWTW.txt', 'c:\temp\abc.txt' , 'c:\temp\YPROLOG.txt') // index, zero based, of file last changed&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.WriteAllText('c:\temp\abc.txt' , 'hello', 'world')&#13;&#10;select OTS_FILESYSTEM.WriteAllTextLines('c:\temp\abc.txt' , 'hello', 'world')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileCopy('c:\temp\abc.txt' , 'c:\temp\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCopy('c:\temp\abcdir' , 'c:\temp\defdir')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileMove('c:\temp\abc.txt' , 'c:\temp\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryIsEmpty('c:\temp\zzz' )&#13;&#10;select OTS_FILESYSTEM.DirectoryIsEmptyOrNotExists('c:\temp\zzz')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryMove('c:\temp\ttt',  'c:\temp\ttt1')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileDelete('c:\temp\abc.txt') &#13;&#10;select OTS_FILESYSTEM.FilesDelete('c:\temp\abc*.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCreate('c:\temp\MyNewDirectory')&#13;&#10;select OTS_FILESYSTEM.DirectoryDelete('c:\temp\MyNewDirectory')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCreate('c:\temp\MyNewDirectory\SomeSubDir')&#13;&#10;select OTS_FILESYSTEM.DirectoryDeleteRecursive('c:\temp\MyNewDirectory')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.GetShortPathName('c:\program files\Common files')" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" CONSTRUCTOR_SQL="" ACTIVE="N"/></Component_Constructors><Components documentName="Components"><T_RDMI_COMPONENT COMPONENT_NAME="OTS_FILESYSTEM" DESCRIPTION="The OTS_FILESYSTEM interacts with the Windows File system.&#13;&#10;&#13;&#10;Method call examples:&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.pathcombine('c:\temp', 'aa\bb', 'cc', 'foo.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileExists('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryExists('c:\temp\xyz')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.directoryname('c:\temp\abc\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileName('c:\temp\abc\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileExtension('c:\temp\abc\def.png')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.ReadTextFile('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.ReadBinaryFileToBase64('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.AccesTime('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.Modified('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.NewestFile( 'c:\temp\WINFILES_USWTW.txt', 'c:\temp\abc.txt' , 'c:\temp\YPROLOG.txt') // index, zero based, of file last changed&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.WriteAllText('c:\temp\abc.txt' , 'hello', 'world')&#13;&#10;select OTS_FILESYSTEM.WriteAllTextLines('c:\temp\abc.txt' , 'hello', 'world')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileCopy('c:\temp\abc.txt' , 'c:\temp\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCopy('c:\temp\abcdir' , 'c:\temp\defdir')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileMove('c:\temp\abc.txt' , 'c:\temp\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryIsEmpty('c:\temp\zzz' )&#13;&#10;select OTS_FILESYSTEM.DirectoryIsEmptyOrNotExists('c:\temp\zzz')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryMove('c:\temp\ttt',  'c:\temp\ttt1')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileDelete('c:\temp\abc.txt') &#13;&#10;select OTS_FILESYSTEM.FilesDelete('c:\temp\abc*.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCreate('c:\temp\MyNewDirectory')&#13;&#10;select OTS_FILESYSTEM.DirectoryDelete('c:\temp\MyNewDirectory')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCreate('c:\temp\MyNewDirectory\SomeSubDir')&#13;&#10;select OTS_FILESYSTEM.DirectoryDeleteRecursive('c:\temp\MyNewDirectory')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.GetShortPathName('c:\program files\Common files')" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y"/></Components><DotNet_Components documentName="DotNet Components"><T_RDMI_DOTNET_COMPONENT COMPONENT_NAME="OTS_FILESYSTEM" DESCRIPTION="The OTS_FILESYSTEM interacts with the Windows File system.&#13;&#10;&#13;&#10;Method call examples:&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.pathcombine('c:\temp', 'aa\bb', 'cc', 'foo.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileExists('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryExists('c:\temp\xyz')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.directoryname('c:\temp\abc\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileName('c:\temp\abc\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileExtension('c:\temp\abc\def.png')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.ReadTextFile('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.ReadBinaryFileToBase64('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.AccesTime('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.Modified('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.NewestFile( 'c:\temp\WINFILES_USWTW.txt', 'c:\temp\abc.txt' , 'c:\temp\YPROLOG.txt') // index, zero based, of file last changed&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.WriteAllText('c:\temp\abc.txt' , 'hello', 'world')&#13;&#10;select OTS_FILESYSTEM.WriteAllTextLines('c:\temp\abc.txt' , 'hello', 'world')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileCopy('c:\temp\abc.txt' , 'c:\temp\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCopy('c:\temp\abcdir' , 'c:\temp\defdir')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileMove('c:\temp\abc.txt' , 'c:\temp\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryIsEmpty('c:\temp\zzz' )&#13;&#10;select OTS_FILESYSTEM.DirectoryIsEmptyOrNotExists('c:\temp\zzz')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryMove('c:\temp\ttt',  'c:\temp\ttt1')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileDelete('c:\temp\abc.txt') &#13;&#10;select OTS_FILESYSTEM.FilesDelete('c:\temp\abc*.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCreate('c:\temp\MyNewDirectory')&#13;&#10;select OTS_FILESYSTEM.DirectoryDelete('c:\temp\MyNewDirectory')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCreate('c:\temp\MyNewDirectory\SomeSubDir')&#13;&#10;select OTS_FILESYSTEM.DirectoryDeleteRecursive('c:\temp\MyNewDirectory')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.GetShortPathName('c:\program files\Common files')" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" ASSEMBLYREFS="" PROGRAM_SOURCE="using System;&#13;&#10;using System.IO;&#13;&#10;using System.Runtime.InteropServices;&#13;&#10;using System.Text;&#13;&#10;&#13;&#10;class OTS_FILESYSTEM &#13;&#10;{&#13;&#10;&#9;public static string PathCombine(Object[] args)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;string[] strargs = new string[args.Length];&#13;&#10;&#9;&#9;for(int i=0; i&lt;args.Length; i++)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;strargs[i] = (string)args[i];&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return Path.Combine(strargs);&#13;&#10;&#9;}&#13;&#10;&#9;public static String DirectoryName(String filepath)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;FileInfo fi = new FileInfo(filepath);&#13;&#10;&#9;&#9;return fi.DirectoryName;&#13;&#10;&#9;}&#13;&#10;&#9;public static String FileName(String filepath)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;FileInfo fi = new FileInfo(filepath);&#13;&#10;&#9;&#9;return fi.Name;&#13;&#10;&#9;}&#13;&#10;&#9;public static String FileExtension(String filepath)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;FileInfo fi = new FileInfo(filepath);&#13;&#10;&#9;&#9;return fi.Extension;&#13;&#10;&#9;}&#13;&#10;&#9;public static String ReadTextFile(String filename)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;return File.ReadAllText(filename);&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;ReadTextFile fails: {0}&quot;,  ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;}&#13;&#10;&#9;public static String ReadBinaryFileToBase64(String filename)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;byte[] bytes = File.ReadAllBytes(filename);&#13;&#10;&#9;&#9;return Convert.ToBase64String(bytes);&#13;&#10;&#9;}&#13;&#10;&#9;public static DateTime AccessTime(string filename)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;return File.GetLastAccessTime(filename);&#13;&#10;&#9;}           &#13;&#10;&#9;public static DateTime Modified(string filename)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;return File.GetLastWriteTime(filename);&#13;&#10;&#9;} &#13;&#10;&#9;// returns the argument number of the newest file, starting at 0 for the first argument&#13;&#10;&#9;public static int NewestFile(Object[] files)&#13;&#10;&#9;{&#9;&#13;&#10;&#9;&#9;int newestpos = -1;&#13;&#10;&#9;&#9;DateTime newest = new DateTime(1970,1,1,0,0,0);&#13;&#10;&#9;&#9;for(int i = 0; i &lt; files.Length; i++)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;string filepath = files[i].ToString();&#13;&#10;&#9;&#9;&#9;if(File.Exists(filepath))&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;DateTime dt = File.GetLastWriteTime(filepath);&#13;&#10;&#9;&#9;&#9;&#9;if(dt &gt;= newest)&#13;&#10;&#9;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;&#9;newest = dt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;newestpos = i;&#13;&#10;&#9;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return newestpos;&#13;&#10;&#9;} &#13;&#10;&#9;public static bool WriteAllText(string filename, Object[] textargs)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;if(textargs==null || textargs.Length &lt; 1) return false;&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;using (TextWriter tw = new StreamWriter(filename))&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;foreach(object textobj in textargs)&#13;&#10;&#9;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;&#9;tw.Write((string)textobj);&#13;&#10;&#9;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;WriteAllText fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool WriteAllTextLines(string filename, Object[] textargs)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;if(textargs==null || textargs.Length &lt; 1) return false;&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;using (TextWriter tw = new StreamWriter(filename))&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;foreach(object textobj in textargs)&#13;&#10;&#9;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;&#9;tw.WriteLine((string)textobj);&#13;&#10;&#9;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;WriteAllText fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool AppendAllText(string filename, Object[] textargs)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;if(textargs==null || textargs.Length &lt; 1) return false;&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;using (TextWriter tw = File.AppendText(filename))&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;foreach(object textobj in textargs)&#13;&#10;&#9;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;&#9;tw.Write((string)textobj);&#13;&#10;&#9;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;AppendAllText fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool AppendAllTextLines(string filename, Object[] textargs)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;if(textargs==null || textargs.Length &lt; 1) return false;&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;using (TextWriter tw = File.AppendText(filename))&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;foreach(object textobj in textargs)&#13;&#10;&#9;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;&#9;tw.WriteLine((string)textobj);&#13;&#10;&#9;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;AppendAllText fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool FileCopy(string sourceFile, string destFile)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;File.Copy( sourceFile, destFile, true);&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;FileCopy fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;   &#9;public static void DirectoryCopy(string s, string d)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;DirectoryInfo ds = new DirectoryInfo(s);&#13;&#10;&#9;&#9;DirectoryInfo dd = new DirectoryInfo(d);&#13;&#10;&#9;&#9;CopyAll(ds, dd);&#13;&#10;&#9;}&#13;&#10;&#9;private static void CopyAll(DirectoryInfo source, DirectoryInfo target)&#13;&#10;    {&#13;&#10;&#9;&#9;Directory.CreateDirectory(target.FullName);&#13;&#10;&#9;&#9;foreach (FileInfo fi in source.GetFiles())&#13;&#10;&#9;&#9;{//Console.WriteLine(@&quot;Copying {0}\{1}&quot;, target.FullName, fi.Name);&#13;&#10;&#9;&#9;&#9;fi.CopyTo(Path.Combine(target.FullName, fi.Name), true);&#13;&#10;&#9;&#9;}&#13;&#10;        foreach (DirectoryInfo diSourceSubDir in source.GetDirectories())&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;DirectoryInfo nextTargetSubDir = target.CreateSubdirectory(diSourceSubDir.Name);&#13;&#10;&#9;&#9;&#9;CopyAll(diSourceSubDir, nextTargetSubDir);&#13;&#10;&#9;&#9;}&#13;&#10;    }&#13;&#10;&#9;public static bool FileMove(string filename1, string filename2)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;File.Move( filename1, filename2);&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;FileMove fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool FileExists(string path)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;return File.Exists(path);&#13;&#10;&#9;}&#13;&#10;&#9;public static bool DirectoryExists(string path)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;return Directory.Exists(path);&#13;&#10;&#9;}&#13;&#10;&#9;public static bool DirectoryIsEmptyOrNotExists(string path)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;return !Directory.Exists(path) || DirectoryIsEmpty(path);&#13;&#10;&#9;}&#13;&#10;&#9;public static bool DirectoryIsEmpty(string path)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;int nfiles = Directory.GetFiles(path).Length;&#13;&#10;&#9;&#9;&#9;if(nfiles &gt; 0)&#13;&#10;&#9;&#9;&#9;&#9;return false;&#13;&#10;&#9;&#9;&#9;int ndirs = Directory.GetDirectories(path).Length;&#13;&#10;&#9;&#9;&#9;if(ndirs&gt;0)&#13;&#10;&#9;&#9;&#9;&#9;return false;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(&quot;IsEmpty check for &quot; + path + &quot; fails: &quot; + ex.Message); //decide whether to report errors or just return false&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return true;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool DirectoryMove(string filename1, string filename2)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;Directory.Move( filename1, filename2);&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;DirectoryMove fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool FileDelete(string filepath)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;File.Delete(filepath);&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;FileDelete fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool FilesDelete(string pathpattern)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;int dir_end = pathpattern.LastIndexOf(@&quot;\&quot;);&#13;&#10;&#9;&#9;string dirpattern = (dir_end &lt; 1) ? string.Empty : pathpattern.Substring(0, dir_end);&#13;&#10;&#9;&#9;string filepattern = (dir_end &lt; 1) ? pathpattern : pathpattern.Substring(dir_end + 1);&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;string dirpath = new FileInfo(dirpattern).FullName;&#13;&#10;&#9;&#9;&#9;DirectoryInfo dir = new DirectoryInfo(dirpath);&#13;&#10;&#9;&#9;&#9;foreach (FileInfo file in dir.EnumerateFiles(filepattern))&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;file.Delete();&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch (Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;FilesDelete fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;public static bool DirectoryDelete(string dirname)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;if(!Directory.Exists(dirname))&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;return false;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;Directory.Delete( dirname);&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;DirectoryDelete fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool DirectoryDeleteRecursive(string dirname)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;if(!Directory.Exists(dirname))&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;return false;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;Directory.Delete(dirname, true);&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;DirectoryDeleteRecursive fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool DirectoryCreate(string dirname)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;Directory.CreateDirectory( dirname);&#13;&#10;&#9;&#9;&#9;return true;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;DirectoryCreate fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#9;public static bool  ConcatFiles(string srcpath, string filename2, string filename)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;try&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;File.Copy(srcpath, filename);&#13;&#10;&#9;&#9;&#9;TextWriter tw = File.AppendText(filename);&#13;&#10;&#9;&#9;&#9;StreamReader sr;&#13;&#10;&#9;&#9;&#9;sr=File.OpenText(filename2);&#13;&#10;&#9;&#9;&#9;string str=sr.ReadLine();&#13;&#10;&#9;&#9;&#9;while(str!=null)&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;str=sr.ReadLine();&#13;&#10;&#9;&#9;&#9;&#9;tw.WriteLine(str);&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;tw.Close();&#13;&#10;&#9;&#9;&#9;sr.Close();&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;catch(Exception ex)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;throw new Exception(string.Format(&quot;ConcatFiles fails: {0}&quot;, ex.ToString()));&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return false;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;[DllImport(&quot;kernel32.dll&quot;, CharSet = CharSet.Auto)]&#13;&#10;&#9;private static extern int GetShortPathName&#13;&#10;&#9;(&#13;&#10;&#9;&#9;[MarshalAs(UnmanagedType.LPTStr)]&#13;&#10;&#9;&#9; string path,&#13;&#10;&#9;&#9; [MarshalAs(UnmanagedType.LPTStr)]&#13;&#10;&#9;&#9;  StringBuilder shortPath,&#13;&#10;&#9;&#9;  int shortPathLength&#13;&#10;&#9;);&#13;&#10;&#13;&#10;&#9;public static string GetShortPathName(String longpath)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;StringBuilder shortPath = new StringBuilder(255);&#13;&#10;&#9;&#9;GetShortPathName(longpath, shortPath, shortPath.Capacity);&#13;&#10;&#9;&#9;return shortPath.ToString();&#13;&#10;&#9;}&#13;&#10;}" DOTNET_ACTIVE="Y"/></DotNet_Components><Methods documentName="Methods"><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="ACCESSTIME" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="AccessTime" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="APPENDALLTEXT" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="AppendAllText" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="APPENDALLTEXTLINES" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="AppendAllTextLines" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="CONCATFILES" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="ConcatFiles" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYCOPY" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryCopy" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYCREATE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryCreate" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYDELETE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryDelete" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYDELETERECURSIVE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryDeleteRecursive" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYEXISTS" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryExists" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYISEMPTY" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryIsEmpty" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYISEMPTYORNOTEXISTS" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryIsEmptyOrNotExists" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYMOVE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryMove" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="DIRECTORYNAME" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="DirectoryName" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="FILECOPY" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="FileCopy" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="FILEDELETE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="FileDelete" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="FILEEXISTS" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="FileExists" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="FILEEXTENSION" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="FileExtension" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="FILEMOVE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="FileMove" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="FILENAME" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="FileName" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="FILESDELETE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="FilesDelete" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="GETSHORTPATHNAME" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="GetShortPathName" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="MODIFIED" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="Modified" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="NEWESTFILE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="NewestFile" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="OTS_FILESYSTEM" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="OTS_FILESYSTEM" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="PATHCOMBINE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="PathCombine" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="READBINARYFILETOBASE64" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="ReadBinaryFileToBase64" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="READTEXTFILE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="ReadTextFile" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="WRITEALLTEXT" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="WriteAllText" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_METHOD COMPONENT_NAME="OTS_FILESYSTEM" METHOD_NAME="WRITEALLTEXTLINES" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="WriteAllTextLines" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/></Methods><Parameters documentName="Parameters"><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="ACCESSTIME" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_AccessTime" KIND="RETURN" PRIMITIVE_DATA_TYPE="DATE" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="APPENDALLTEXT" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_AppendAllText" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="APPENDALLTEXTLINES" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_AppendAllTextLines" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="CONCATFILES" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_ConcatFiles" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="DIRECTORYCREATE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_DirectoryCreate" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="DIRECTORYDELETE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_DirectoryDelete" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="DIRECTORYDELETERECURSIVE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_DirectoryDeleteRecursive" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="DIRECTORYEXISTS" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_DirectoryExists" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="DIRECTORYISEMPTY" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_DirectoryIsEmpty" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="DIRECTORYISEMPTYORNOTEXISTS" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_DirectoryIsEmptyOrNotExists" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="DIRECTORYMOVE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_DirectoryMove" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="DIRECTORYNAME" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_DirectoryName" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="FILECOPY" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_FileCopy" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="FILEDELETE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_FileDelete" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="FILEEXISTS" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_FileExists" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="FILEEXTENSION" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_FileExtension" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="FILEMOVE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_FileMove" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="FILENAME" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_FileName" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="FILESDELETE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_FilesDelete" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="GETSHORTPATHNAME" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_GetShortPathName" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="MODIFIED" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_Modified" KIND="RETURN" PRIMITIVE_DATA_TYPE="DATE" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="NEWESTFILE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_NewestFile" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="PATHCOMBINE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_PathCombine" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="READBINARYFILETOBASE64" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_ReadBinaryFileToBase64" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="READTEXTFILE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_ReadTextFile" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="WRITEALLTEXT" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_WriteAllText" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="0" METHOD_NAME="WRITEALLTEXTLINES" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_WriteAllTextLines" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="ACCESSTIME" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="APPENDALLTEXT" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="APPENDALLTEXTLINES" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="CONCATFILES" METHOD_SEQNO="1" PARAMETER_NAME="srcpath" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYCOPY" METHOD_SEQNO="1" PARAMETER_NAME="s" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYCREATE" METHOD_SEQNO="1" PARAMETER_NAME="dirname" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYDELETE" METHOD_SEQNO="1" PARAMETER_NAME="dirname" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYDELETERECURSIVE" METHOD_SEQNO="1" PARAMETER_NAME="dirname" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYEXISTS" METHOD_SEQNO="1" PARAMETER_NAME="path" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYISEMPTY" METHOD_SEQNO="1" PARAMETER_NAME="path" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYISEMPTYORNOTEXISTS" METHOD_SEQNO="1" PARAMETER_NAME="path" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYMOVE" METHOD_SEQNO="1" PARAMETER_NAME="filename1" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="DIRECTORYNAME" METHOD_SEQNO="1" PARAMETER_NAME="filepath" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="FILECOPY" METHOD_SEQNO="1" PARAMETER_NAME="sourceFile" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="FILEDELETE" METHOD_SEQNO="1" PARAMETER_NAME="filepath" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="FILEEXISTS" METHOD_SEQNO="1" PARAMETER_NAME="path" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="FILEEXTENSION" METHOD_SEQNO="1" PARAMETER_NAME="filepath" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="FILEMOVE" METHOD_SEQNO="1" PARAMETER_NAME="filename1" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="FILENAME" METHOD_SEQNO="1" PARAMETER_NAME="filepath" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="FILESDELETE" METHOD_SEQNO="1" PARAMETER_NAME="pathpattern" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="GETSHORTPATHNAME" METHOD_SEQNO="1" PARAMETER_NAME="longpath" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="MODIFIED" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="NEWESTFILE" METHOD_SEQNO="1" PARAMETER_NAME="files" KIND="INLIST" PRIMITIVE_DATA_TYPE="VARIABLE" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="PATHCOMBINE" METHOD_SEQNO="1" PARAMETER_NAME="args" KIND="INLIST" PRIMITIVE_DATA_TYPE="VARIABLE" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="READBINARYFILETOBASE64" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="READTEXTFILE" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="WRITEALLTEXT" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="1" METHOD_NAME="WRITEALLTEXTLINES" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="APPENDALLTEXT" METHOD_SEQNO="1" PARAMETER_NAME="textargs" KIND="INLIST" PRIMITIVE_DATA_TYPE="VARIABLE" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="APPENDALLTEXTLINES" METHOD_SEQNO="1" PARAMETER_NAME="textargs" KIND="INLIST" PRIMITIVE_DATA_TYPE="VARIABLE" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="CONCATFILES" METHOD_SEQNO="1" PARAMETER_NAME="filename2" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="DIRECTORYCOPY" METHOD_SEQNO="1" PARAMETER_NAME="d" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="DIRECTORYMOVE" METHOD_SEQNO="1" PARAMETER_NAME="filename2" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="FILECOPY" METHOD_SEQNO="1" PARAMETER_NAME="destFile" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="FILEMOVE" METHOD_SEQNO="1" PARAMETER_NAME="filename2" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="WRITEALLTEXT" METHOD_SEQNO="1" PARAMETER_NAME="textargs" KIND="INLIST" PRIMITIVE_DATA_TYPE="VARIABLE" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="2" METHOD_NAME="WRITEALLTEXTLINES" METHOD_SEQNO="1" PARAMETER_NAME="textargs" KIND="INLIST" PRIMITIVE_DATA_TYPE="VARIABLE" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/><T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILESYSTEM" PARAMETER_SEQNO="3" METHOD_NAME="CONCATFILES" METHOD_SEQNO="1" PARAMETER_NAME="filename" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/></Parameters><Stateful_Components documentName="Stateful Components"><T_RDMI_STATEFUL_COMPONENT COMPONENT_NAME="OTS_FILESYSTEM" DESCRIPTION="The OTS_FILESYSTEM interacts with the Windows File system.&#13;&#10;&#13;&#10;Method call examples:&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.pathcombine('c:\temp', 'aa\bb', 'cc', 'foo.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileExists('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryExists('c:\temp\xyz')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.directoryname('c:\temp\abc\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileName('c:\temp\abc\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileExtension('c:\temp\abc\def.png')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.ReadTextFile('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.ReadBinaryFileToBase64('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.AccesTime('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.Modified('c:\temp\abc.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.NewestFile( 'c:\temp\WINFILES_USWTW.txt', 'c:\temp\abc.txt' , 'c:\temp\YPROLOG.txt') // index, zero based, of file last changed&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.WriteAllText('c:\temp\abc.txt' , 'hello', 'world')&#13;&#10;select OTS_FILESYSTEM.WriteAllTextLines('c:\temp\abc.txt' , 'hello', 'world')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileCopy('c:\temp\abc.txt' , 'c:\temp\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCopy('c:\temp\abcdir' , 'c:\temp\defdir')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileMove('c:\temp\abc.txt' , 'c:\temp\def.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryIsEmpty('c:\temp\zzz' )&#13;&#10;select OTS_FILESYSTEM.DirectoryIsEmptyOrNotExists('c:\temp\zzz')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryMove('c:\temp\ttt',  'c:\temp\ttt1')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.FileDelete('c:\temp\abc.txt') &#13;&#10;select OTS_FILESYSTEM.FilesDelete('c:\temp\abc*.txt')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCreate('c:\temp\MyNewDirectory')&#13;&#10;select OTS_FILESYSTEM.DirectoryDelete('c:\temp\MyNewDirectory')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.DirectoryCreate('c:\temp\MyNewDirectory\SomeSubDir')&#13;&#10;select OTS_FILESYSTEM.DirectoryDeleteRecursive('c:\temp\MyNewDirectory')&#13;&#10;&#13;&#10;select OTS_FILESYSTEM.GetShortPathName('c:\program files\Common files')" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" LIFETIME="SESSION" TRANSACTIONAL="N" SUPPORTS_COMMIT="N" SUPPORTS_ROLLBACK="N" SUPPORTS_PRECOMMIT="N" SUPPORTS_TABLECOMPONENT="N" SUPPORTS_UPDATE="N" SUPPORTS_INSERT="N" SUPPORTS_DELETE="N" SUPPORTS_CONDITIONS="N" SUPPORTS_ROWSETSIZEHINT="N"/></Stateful_Components></MultiImport>