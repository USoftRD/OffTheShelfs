<?xml version="1.0" encoding="UTF-8"?>
<?usoft-xml version="1.0" action="multi-tables-import"?>
<MultiImport>
	<Business_Objects documentName="Business Objects">
		<T_BUSINESS_OBJECT NAME="LDAP" ABBREVIATION="" BUS_AREA="" PRINT_SEQNO="" BOBJ_TYPE="" DEPENDENCY_FLAG="" FUNCTIONAL_YN="OFF" VERSION_CODE="" DESCRIPTION="" CREATE_DATE="2017-12-19T11:38:43" CREATE_USER="P3100027" CHANGE_DATE="2017-12-19T11:42:03" CHANGE_USER="P3100027" OKE_USER="" BUILD_USER="" TEST_USER="" ADD_RELATIONS="" ADD_DOMAINS="N" APPROVED_YN="N" BUILD_YN="N" TESTED_OK="N" DEFINED_BY="" DEFINED_YN="N" ESTIMATED_HRS="" ACTUAL_HRS="" LAYOUT_STORED="N" PRIORITY="" SOURCE_NAME="" MOTIVATION_CODE=""/>
	</Business_Objects>
	<Columns documentName="Columns">
		<T_COLUMN TABLE_NAME="LDAP" COLUMN_NAME="DN" DOMAIN_NAME="RDMI_STRING" PROMPT="DN" KEYORDER="1" MANDATORY="Y" INPUT_ALLOWED="Y" UPDATABLE="N" QUERY_ALLOWED="Y" COLUMN_TYPE="D" DISPLAYED="Y" DEF_VALUE="" SEQNO="1" LOFSEQNO="" PERC_FULL="" PERC_NULL="0" HELP_TEXT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" UNDER_VC="Y"/>
		<T_COLUMN TABLE_NAME="LDAP" COLUMN_NAME="QUERY" DOMAIN_NAME="RDMI_STRING" PROMPT="Query" KEYORDER="N" MANDATORY="N" INPUT_ALLOWED="Y" UPDATABLE="Y" QUERY_ALLOWED="Y" COLUMN_TYPE="D" DISPLAYED="Y" DEF_VALUE="" SEQNO="2" LOFSEQNO="" PERC_FULL="" PERC_NULL="50" HELP_TEXT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" UNDER_VC="Y"/>
		<T_COLUMN TABLE_NAME="LDAP" COLUMN_NAME="SEQNO" DOMAIN_NAME="LDAP_SEQ" PROMPT="Sequence Number" KEYORDER="1" MANDATORY="Y" INPUT_ALLOWED="Y" UPDATABLE="N" QUERY_ALLOWED="Y" COLUMN_TYPE="D" DISPLAYED="N" DEF_VALUE="" SEQNO="0" LOFSEQNO="" PERC_FULL="50" PERC_NULL="0" HELP_TEXT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" UNDER_VC="Y"/>
		<T_COLUMN TABLE_NAME="LDAPATTRIBUTE" COLUMN_NAME="ATTRIBUTE_NAME" DOMAIN_NAME="LDAP_STRING" PROMPT="Attribute" KEYORDER="N" MANDATORY="Y" INPUT_ALLOWED="Y" UPDATABLE="Y" QUERY_ALLOWED="Y" COLUMN_TYPE="D" DISPLAYED="Y" DEF_VALUE="" SEQNO="2" LOFSEQNO="" PERC_FULL="" PERC_NULL="0" HELP_TEXT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" UNDER_VC="Y"/>
		<T_COLUMN TABLE_NAME="LDAPATTRIBUTE" COLUMN_NAME="ATTRIBUTE_VALUE" DOMAIN_NAME="LDAP_STRING" PROMPT="Value" KEYORDER="N" MANDATORY="Y" INPUT_ALLOWED="Y" UPDATABLE="Y" QUERY_ALLOWED="Y" COLUMN_TYPE="D" DISPLAYED="Y" DEF_VALUE="" SEQNO="3" LOFSEQNO="" PERC_FULL="" PERC_NULL="0" HELP_TEXT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" UNDER_VC="Y"/>
		<T_COLUMN TABLE_NAME="LDAPATTRIBUTE" COLUMN_NAME="DN" DOMAIN_NAME="RDMI_STRING" PROMPT="dn" KEYORDER="1" MANDATORY="Y" INPUT_ALLOWED="Y" UPDATABLE="N" QUERY_ALLOWED="Y" COLUMN_TYPE="D" DISPLAYED="Y" DEF_VALUE="" SEQNO="1" LOFSEQNO="" PERC_FULL="" PERC_NULL="0" HELP_TEXT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" UNDER_VC="Y"/>
		<T_COLUMN TABLE_NAME="LDAPATTRIBUTE" COLUMN_NAME="PK" DOMAIN_NAME="LDAP_SEQ" PROMPT="PK" KEYORDER="1" MANDATORY="Y" INPUT_ALLOWED="Y" UPDATABLE="N" QUERY_ALLOWED="Y" COLUMN_TYPE="D" DISPLAYED="N" DEF_VALUE="" SEQNO="4" LOFSEQNO="" PERC_FULL="50" PERC_NULL="0" HELP_TEXT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" UNDER_VC="Y"/>
		<T_COLUMN TABLE_NAME="LDAPATTRIBUTE" COLUMN_NAME="SEQNO" DOMAIN_NAME="LDAP_SEQ" PROMPT="Sequence number" KEYORDER="1" MANDATORY="Y" INPUT_ALLOWED="Y" UPDATABLE="N" QUERY_ALLOWED="Y" COLUMN_TYPE="D" DISPLAYED="Y" DEF_VALUE="" SEQNO="0" LOFSEQNO="" PERC_FULL="50" PERC_NULL="0" HELP_TEXT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" UNDER_VC="Y"/>
	</Columns>
	<Component_Constructors documentName="Component Constructors">
		<T_RDMI_COMPONENT_CONSTRUCTOR COMPONENT_NAME="LDAP" DESCRIPTION="For the policy and limitations regarding Off the Shelf components, refer to Help topic: Off the Shelf components.        &#10;&#10;You can use the LDAPTable component to connect to an LDAP server for accessing modifying information in directories. A directory is a specialized database optimized for reading, browsing and searching. LDAP stands for Lightweight Directory Access Protocol. As the name suggests, it is a lightweight protocol for accessing directory services, specifically X.500-based directory services.   &#10;The LDAP tableComponent is used together with LDAPAttribute. In order to work with LDAP you should import the LDAPAttribute tableComponent too. Their componentTables relate to each other as parent and child.&#10;&#10;The LDAP table component creates a connection to a directory service with the following parameters:   &#10;1-LDAP Version number.   &#10;2-Host: specifying the name of the LDAP directory server.   &#10;3-LDAP Port.   &#10;4-RootDN: the first or top-level entry is the root entry, e.g. dc=ness,dc=com.   &#10;5-User.   &#10;6-Password.   &#10;&#10;Therefore the constructor SQL has to specify the LDAP Version number, Host. LDAP Port, RootDN, User, Password.   &#10;NOTE: The LDAPATTRIBUTE tableComponent must have the same constructor-sql as the LDAP componentTable.&#10;&#10;Example of constructor SQL:       &#10;select        &#10;'&lt;LDAP Version number&gt;', (e.g. 3)       &#10;'&lt;Host&gt;',   (e.g. 'localhost')       &#10;'&lt;LDAP Port&gt;',  (e.g. 389)       &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')       &#10;'&lt;User&gt;',    (e.g. 'myUser')        &#10;'&lt;Password&gt;'    (e.g. 'myPassword')       &#10;&#10;After you have configured the constructor SQL fot both the LDAP component as for the LDAPATTRIBUTE component, don't forget to check both constructor SQL's on the 'State' tabpage and to save the changes.   &#10;&#10;You can specify LDAP user and password in the Authorizer. After creating a new user in the Authorizer selecting LDAP as validation agent, the Authorizer will validate the user's password credentials. &#10;  &#10;If you don't want users to query or edit other users passwords, you should configure slapd.config as follows:&#10;access to attr=userPassword&#10;&#9;by anonymous auth&#10;&#9;by self read&#10;&#9;by self write&#10;&#9;by dn=&quot;&lt;myDN&gt;&quot; write&#10;This way users won't have read access to other users passwords. See http://www.openldap.org/ for more details on configuration options for slapd.config.&#10;&#10;In order for the Application to be able to query, modify or add entries, their attributes and values in the LDAP directories, it's necessary for the LDAP directory server (slapd) to be running.   &#10;&#10;In the query field it's possible to query directories on specific attribute names. It's allowed to use search filters. Here's an example of how to use the search filter syntax:   &#10;        (cn=Common Name)   &#10;        (!(cn=Common Name))   &#10;        (&amp;(objectClass=Person)(|(sn=Surname)(cn=Common Na*)))   &#10;        (o=nes*euro*)   &#10;Search Filter Definition:   &#10;        and = &quot;&amp;&quot;   &#10;        or = &quot;|&quot;   &#10;        not = &quot;!&quot; filter   &#10;        equal= &quot;=&quot;   &#10;        approx= &quot;~=&quot;   &#10;        greater= &quot;&gt;=&quot;   &#10;        less = &quot;&lt;=&quot;   &#10;        any = &quot;*&quot;" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="Y" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="N" T_RDMI_COMPONENT_CONSTRUCTOR="Y" CONSTRUCTOR_SQL="SELECT&#10;'&lt;LDAP Version number&gt;', (e.g. 3)     &#10;'&lt;Host&gt;',   (e.g. 'localhost')     &#10;'&lt;LDAP Port&gt;',  (e.g. 389)     &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')     &#10;'&lt;User&gt;',    (e.g. 'MyUser')      &#10;'&lt;Password&gt;'    (e.g. 'myPassword')" ACTIVE="Y"/>
		<T_RDMI_COMPONENT_CONSTRUCTOR COMPONENT_NAME="LDAPATTRIBUTE" DESCRIPTION="For the policy and limitations regarding Off the Shelf components, refer to Help topic: Off the Shelf components.&#10;&#10;LDAPATTRIBUTE is used together with the LDAP tableComponent.&#10;The LDAPATTRIBUTE tableComponent must have the same constructor-sql as the LDAP componentTable.&#10;&#10;Example of constructor SQL:       &#10;select        &#10;'&lt;LDAP Version number&gt;', (e.g. 3)       &#10;'&lt;Host&gt;',   (e.g. 'localhost')       &#10;'&lt;LDAP Port&gt;',  (e.g. 389)       &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')       &#10;'&lt;User&gt;',    (e.g. 'myUser')        &#10;'&lt;Password&gt;'    (e.g. 'myPassword')       &#10;&#10;After you have configured the constructor SQL fot both the LDAP component as for the LDAPATTRIBUTE component, don't forget to check the constructor SQL's on the 'State' tabpage and to save the changes." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="Y" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="N" T_RDMI_COMPONENT_CONSTRUCTOR="Y" CONSTRUCTOR_SQL="SELECT&#10;'&lt;LDAP Version number&gt;', (e.g. 3)     &#10;'&lt;Host&gt;',   (e.g. 'localhost')     &#10;'&lt;LDAP Port&gt;',  (e.g. 389)     &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')     &#10;'&lt;User&gt;',    (e.g. 'MyUser')      &#10;'&lt;Password&gt;'    (e.g. 'myPassword')" ACTIVE="Y"/>
	</Component_Constructors>
	<Components documentName="Components">
		<T_RDMI_COMPONENT COMPONENT_NAME="LDAP" DESCRIPTION="For the policy and limitations regarding Off the Shelf components, refer to Help topic: Off the Shelf components.        &#10;&#10;You can use the LDAPTable component to connect to an LDAP server for accessing modifying information in directories. A directory is a specialized database optimized for reading, browsing and searching. LDAP stands for Lightweight Directory Access Protocol. As the name suggests, it is a lightweight protocol for accessing directory services, specifically X.500-based directory services.   &#10;The LDAP tableComponent is used together with LDAPAttribute. In order to work with LDAP you should import the LDAPAttribute tableComponent too. Their componentTables relate to each other as parent and child.&#10;&#10;The LDAP table component creates a connection to a directory service with the following parameters:   &#10;1-LDAP Version number.   &#10;2-Host: specifying the name of the LDAP directory server.   &#10;3-LDAP Port.   &#10;4-RootDN: the first or top-level entry is the root entry, e.g. dc=ness,dc=com.   &#10;5-User.   &#10;6-Password.   &#10;&#10;Therefore the constructor SQL has to specify the LDAP Version number, Host. LDAP Port, RootDN, User, Password.   &#10;NOTE: The LDAPATTRIBUTE tableComponent must have the same constructor-sql as the LDAP componentTable.&#10;&#10;Example of constructor SQL:       &#10;select        &#10;'&lt;LDAP Version number&gt;', (e.g. 3)       &#10;'&lt;Host&gt;',   (e.g. 'localhost')       &#10;'&lt;LDAP Port&gt;',  (e.g. 389)       &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')       &#10;'&lt;User&gt;',    (e.g. 'myUser')        &#10;'&lt;Password&gt;'    (e.g. 'myPassword')       &#10;&#10;After you have configured the constructor SQL fot both the LDAP component as for the LDAPATTRIBUTE component, don't forget to check both constructor SQL's on the 'State' tabpage and to save the changes.   &#10;&#10;You can specify LDAP user and password in the Authorizer. After creating a new user in the Authorizer selecting LDAP as validation agent, the Authorizer will validate the user's password credentials. &#10;  &#10;If you don't want users to query or edit other users passwords, you should configure slapd.config as follows:&#10;access to attr=userPassword&#10;&#9;by anonymous auth&#10;&#9;by self read&#10;&#9;by self write&#10;&#9;by dn=&quot;&lt;myDN&gt;&quot; write&#10;This way users won't have read access to other users passwords. See http://www.openldap.org/ for more details on configuration options for slapd.config.&#10;&#10;In order for the Application to be able to query, modify or add entries, their attributes and values in the LDAP directories, it's necessary for the LDAP directory server (slapd) to be running.   &#10;&#10;In the query field it's possible to query directories on specific attribute names. It's allowed to use search filters. Here's an example of how to use the search filter syntax:   &#10;        (cn=Common Name)   &#10;        (!(cn=Common Name))   &#10;        (&amp;(objectClass=Person)(|(sn=Surname)(cn=Common Na*)))   &#10;        (o=nes*euro*)   &#10;Search Filter Definition:   &#10;        and = &quot;&amp;&quot;   &#10;        or = &quot;|&quot;   &#10;        not = &quot;!&quot; filter   &#10;        equal= &quot;=&quot;   &#10;        approx= &quot;~=&quot;   &#10;        greater= &quot;&gt;=&quot;   &#10;        less = &quot;&lt;=&quot;   &#10;        any = &quot;*&quot;" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="Y" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="N" T_RDMI_COMPONENT_CONSTRUCTOR="Y"/>
		<T_RDMI_COMPONENT COMPONENT_NAME="LDAPATTRIBUTE" DESCRIPTION="For the policy and limitations regarding Off the Shelf components, refer to Help topic: Off the Shelf components.&#10;&#10;LDAPATTRIBUTE is used together with the LDAP tableComponent.&#10;The LDAPATTRIBUTE tableComponent must have the same constructor-sql as the LDAP componentTable.&#10;&#10;Example of constructor SQL:       &#10;select        &#10;'&lt;LDAP Version number&gt;', (e.g. 3)       &#10;'&lt;Host&gt;',   (e.g. 'localhost')       &#10;'&lt;LDAP Port&gt;',  (e.g. 389)       &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')       &#10;'&lt;User&gt;',    (e.g. 'myUser')        &#10;'&lt;Password&gt;'    (e.g. 'myPassword')       &#10;&#10;After you have configured the constructor SQL fot both the LDAP component as for the LDAPATTRIBUTE component, don't forget to check the constructor SQL's on the 'State' tabpage and to save the changes." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="Y" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="N" T_RDMI_COMPONENT_CONSTRUCTOR="Y"/>
	</Components>
	<Data_Contents documentName="Data Contents">
		<T_BO_DATA_CONTENT BUS_OBJECT="LDAP" OWNED="ON" REMARK="" TABLE_NAME="" DOMAIN_NAME="" TARGET_TABLE="LDAP" SOURCE_TABLE="LDAPATTRIBUTE" REF_ROLE="HAS" TEMP_ID="" LAYOUT=""/>
	</Data_Contents>
	<Domains documentName="Domains">
		<T_DOMAIN DOMAIN_NAME="LDAP_SEQ" SUPER_DOMAIN="" DATATYPE="INTEGER" TOTAL_LENGTH="" LENGTH_AFTER_PERIOD="" F_DATATYPE="CHAR" F_TOTAL_LENGTH="1" F_LENGTH_AFTER_PERIOD="" DISPLAY_LENGTH="" UPPERCASE="N" FIXED_LENGTH="N" IS_SEQNO="C" DEF_VALUE="" RANGE_LOW="" RANGE_HIGH="" HELP_TEXT="" IOFORMAT="" DBFORMAT="" DESCR="" PERC_FULL="50" SEQNO_COMPONENT="LDAP" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" REGEXP=""/>
		<T_DOMAIN DOMAIN_NAME="LDAP_STRING" SUPER_DOMAIN="" DATATYPE="VARCHAR2" TOTAL_LENGTH="2000" LENGTH_AFTER_PERIOD="" F_DATATYPE="CHAR" F_TOTAL_LENGTH="8" F_LENGTH_AFTER_PERIOD="" DISPLAY_LENGTH="60" UPPERCASE="N" FIXED_LENGTH="N" IS_SEQNO="N" DEF_VALUE="" RANGE_LOW="" RANGE_HIGH="" HELP_TEXT="" IOFORMAT="" DBFORMAT="" DESCR="" PERC_FULL="" SEQNO_COMPONENT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" REGEXP=""/>
		<T_DOMAIN DOMAIN_NAME="RDMI_STRING" SUPER_DOMAIN="" DATATYPE="VARCHAR2" TOTAL_LENGTH="2000" LENGTH_AFTER_PERIOD="" F_DATATYPE="CHAR" F_TOTAL_LENGTH="8" F_LENGTH_AFTER_PERIOD="" DISPLAY_LENGTH="100" UPPERCASE="N" FIXED_LENGTH="N" IS_SEQNO="N" DEF_VALUE="" RANGE_LOW="" RANGE_HIGH="" HELP_TEXT="" IOFORMAT="" DBFORMAT="" DESCR="" PERC_FULL="" SEQNO_COMPONENT="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" REGEXP=""/>
	</Domains>
	<J2EE_Components documentName="J2EE Components">
		<T_RDMI_JAVA_COMPONENT COMPONENT_NAME="LDAP" DESCRIPTION="For the policy and limitations regarding Off the Shelf components, refer to Help topic: Off the Shelf components.        &#10;&#10;You can use the LDAPTable component to connect to an LDAP server for accessing modifying information in directories. A directory is a specialized database optimized for reading, browsing and searching. LDAP stands for Lightweight Directory Access Protocol. As the name suggests, it is a lightweight protocol for accessing directory services, specifically X.500-based directory services.   &#10;The LDAP tableComponent is used together with LDAPAttribute. In order to work with LDAP you should import the LDAPAttribute tableComponent too. Their componentTables relate to each other as parent and child.&#10;&#10;The LDAP table component creates a connection to a directory service with the following parameters:   &#10;1-LDAP Version number.   &#10;2-Host: specifying the name of the LDAP directory server.   &#10;3-LDAP Port.   &#10;4-RootDN: the first or top-level entry is the root entry, e.g. dc=ness,dc=com.   &#10;5-User.   &#10;6-Password.   &#10;&#10;Therefore the constructor SQL has to specify the LDAP Version number, Host. LDAP Port, RootDN, User, Password.   &#10;NOTE: The LDAPATTRIBUTE tableComponent must have the same constructor-sql as the LDAP componentTable.&#10;&#10;Example of constructor SQL:       &#10;select        &#10;'&lt;LDAP Version number&gt;', (e.g. 3)       &#10;'&lt;Host&gt;',   (e.g. 'localhost')       &#10;'&lt;LDAP Port&gt;',  (e.g. 389)       &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')       &#10;'&lt;User&gt;',    (e.g. 'myUser')        &#10;'&lt;Password&gt;'    (e.g. 'myPassword')       &#10;&#10;After you have configured the constructor SQL fot both the LDAP component as for the LDAPATTRIBUTE component, don't forget to check both constructor SQL's on the 'State' tabpage and to save the changes.   &#10;&#10;You can specify LDAP user and password in the Authorizer. After creating a new user in the Authorizer selecting LDAP as validation agent, the Authorizer will validate the user's password credentials. &#10;  &#10;If you don't want users to query or edit other users passwords, you should configure slapd.config as follows:&#10;access to attr=userPassword&#10;&#9;by anonymous auth&#10;&#9;by self read&#10;&#9;by self write&#10;&#9;by dn=&quot;&lt;myDN&gt;&quot; write&#10;This way users won't have read access to other users passwords. See http://www.openldap.org/ for more details on configuration options for slapd.config.&#10;&#10;In order for the Application to be able to query, modify or add entries, their attributes and values in the LDAP directories, it's necessary for the LDAP directory server (slapd) to be running.   &#10;&#10;In the query field it's possible to query directories on specific attribute names. It's allowed to use search filters. Here's an example of how to use the search filter syntax:   &#10;        (cn=Common Name)   &#10;        (!(cn=Common Name))   &#10;        (&amp;(objectClass=Person)(|(sn=Surname)(cn=Common Na*)))   &#10;        (o=nes*euro*)   &#10;Search Filter Definition:   &#10;        and = &quot;&amp;&quot;   &#10;        or = &quot;|&quot;   &#10;        not = &quot;!&quot; filter   &#10;        equal= &quot;=&quot;   &#10;        approx= &quot;~=&quot;   &#10;        greater= &quot;&gt;=&quot;   &#10;        less = &quot;&lt;=&quot;   &#10;        any = &quot;*&quot;" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="Y" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="N" T_RDMI_COMPONENT_CONSTRUCTOR="Y"/>
		<T_RDMI_JAVA_COMPONENT COMPONENT_NAME="LDAPATTRIBUTE" DESCRIPTION="For the policy and limitations regarding Off the Shelf components, refer to Help topic: Off the Shelf components.&#10;&#10;LDAPATTRIBUTE is used together with the LDAP tableComponent.&#10;The LDAPATTRIBUTE tableComponent must have the same constructor-sql as the LDAP componentTable.&#10;&#10;Example of constructor SQL:       &#10;select        &#10;'&lt;LDAP Version number&gt;', (e.g. 3)       &#10;'&lt;Host&gt;',   (e.g. 'localhost')       &#10;'&lt;LDAP Port&gt;',  (e.g. 389)       &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')       &#10;'&lt;User&gt;',    (e.g. 'myUser')        &#10;'&lt;Password&gt;'    (e.g. 'myPassword')       &#10;&#10;After you have configured the constructor SQL fot both the LDAP component as for the LDAPATTRIBUTE component, don't forget to check the constructor SQL's on the 'State' tabpage and to save the changes." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="Y" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="N" T_RDMI_COMPONENT_CONSTRUCTOR="Y"/>
	</J2EE_Components>
	<Methods documentName="Methods">
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="COMMIT" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.Commit" DESCRIPTION="Saves all changes made in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="CONNECT" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.connect(:0,:1)" DESCRIPTION="Creates a connection to the LDAP Server." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="DELETEROW" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.DeleteRow(argv)" DESCRIPTION="This method deletes an entry in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.InsertRow(argv)" DESCRIPTION="This method inserts a new entry in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="LDAP" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this = new com.usoft.connectors.LDAP((i):0,:1, (i):2, :3, :4, :5)&#10;this.setReferral((U)'follow')" DESCRIPTION="This is the constructor method. All parameters have to be specified in the Constructor SQL.&#10;The user and password parameters may be specified in the Authorizer. After creating a new user in the Authorizer selecting LDAP as validation agent, the Authorizer will validate the user's password credentials.&#10;Setting the Referral has three possible options:&#10;1. 'follow': Default for USoft. This means that the reference is followed to possible other hosts.&#10;2. 'ignore': Ignores any reference.&#10;3. 'throw': Throws an exception when a refernece is found." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="LDAPATTRIBUTEGETSEQUENCENUMBER" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.getNewAttributeSequence(argv)" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="LDAPGETSEQUENCENUMBER" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.getSequence(argv)" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="PRECOMMIT" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.PreCommit" DESCRIPTION="This method is used internally." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.QueryExe(argv)" DESCRIPTION="This method is used within the QUERY protocol." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.QueryFetch(argv)" DESCRIPTION="This method is used within the QUERY protocol." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="ROLLBACK" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.Rollback" DESCRIPTION="This method rollbacks all changes that were made in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.UpdateRow(argv)" DESCRIPTION="Updates an entry in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAP" METHOD_NAME="VALIDATECREDENTIAL" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.validateCredential(:0,:1)" DESCRIPTION="VALIDATECREDENTIALS connects to check if credentials are valid and then disconnects!" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="COMMIT" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.Commit" DESCRIPTION="Saves all changes made in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="DELETEROW" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.DeleteRow(argv)" DESCRIPTION="This method deletes an atrribute in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.InsertRow(argv)" DESCRIPTION="Inserts a new attribute in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="LDAPATTRIBUTE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this = new com.usoft.connectors.LDAPAttribute((i):0,:1, (i):2, :3, :4, :5)" DESCRIPTION="This is the constructor method. All parameters have to be specified in the Constructor SQL." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="PRECOMMIT" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.PreCommit" DESCRIPTION="This method is used internally." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.QueryExe(argv)" DESCRIPTION="This method is used within the QUERY protocol." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.QueryFetch(argv)" DESCRIPTION="This method is used within the QUERY protocol." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="ROLLBACK" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.Rollback" DESCRIPTION="This method rollbacks all changes that were made in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="LDAPATTRIBUTE" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="this.UpdateRow(argv)" DESCRIPTION="Updates attributes in the LDAP directory tree." INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
	</Methods>
	<Parameters documentName="Parameters">
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="0" METHOD_NAME="CONNECT" METHOD_SEQNO="1" PARAMETER_NAME="username" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="0" METHOD_NAME="LDAP" METHOD_SEQNO="1" PARAMETER_NAME="LDAP Version number" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="0" METHOD_NAME="VALIDATECREDENTIAL" METHOD_SEQNO="1" PARAMETER_NAME="username" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="CONNECT" METHOD_SEQNO="1" PARAMETER_NAME="pwd" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="DELETEROW" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="LDAP" METHOD_SEQNO="1" PARAMETER_NAME="Host" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="LDAPATTRIBUTEGETSEQUENCENUMBER" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="OUT" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="LDAPGETSEQUENCENUMBER" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="OUT" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="PRECOMMIT" METHOD_SEQNO="1" PARAMETER_NAME="return" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="1" METHOD_NAME="VALIDATECREDENTIAL" METHOD_SEQNO="1" PARAMETER_NAME="pwd" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="2" METHOD_NAME="DELETEROW" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="2" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="2" METHOD_NAME="LDAP" METHOD_SEQNO="1" PARAMETER_NAME="LDAP Port" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="2" METHOD_NAME="LDAPATTRIBUTEGETSEQUENCENUMBER" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="2" METHOD_NAME="LDAPGETSEQUENCENUMBER" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="2" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="2" METHOD_NAME="VALIDATECREDENTIAL" METHOD_SEQNO="1" PARAMETER_NAME="usergroup" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="3" METHOD_NAME="CONNECT" METHOD_SEQNO="1" PARAMETER_NAME="result" KIND="RETURN" PRIMITIVE_DATA_TYPE="BOOLEAN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="3" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PARAMETER_NAME="QUERY" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="3" METHOD_NAME="LDAP" METHOD_SEQNO="1" PARAMETER_NAME="RootDN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="3" METHOD_NAME="LDAPATTRIBUTEGETSEQUENCENUMBER" METHOD_SEQNO="1" PARAMETER_NAME="PK" KIND="OUT" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="3" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PARAMETER_NAME="QUERY" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="3" METHOD_NAME="VALIDATECREDENTIAL" METHOD_SEQNO="1" PARAMETER_NAME="ticket" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="4" METHOD_NAME="LDAP" METHOD_SEQNO="1" PARAMETER_NAME="User" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="4" METHOD_NAME="VALIDATECREDENTIAL" METHOD_SEQNO="1" PARAMETER_NAME="creation date" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="5" METHOD_NAME="LDAP" METHOD_SEQNO="1" PARAMETER_NAME="Password" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="5" METHOD_NAME="VALIDATECREDENTIAL" METHOD_SEQNO="1" PARAMETER_NAME="validation agent" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="10" METHOD_NAME="VALIDATECREDENTIAL" METHOD_SEQNO="1" PARAMETER_NAME="result" KIND="RETURN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="100" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="return" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="100" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="return" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="101" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="101" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="OUT" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="102" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="102" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="OUT" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="103" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="QUERY" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAP" PARAMETER_SEQNO="103" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="QUERY" KIND="OUT" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="1" METHOD_NAME="DELETEROW" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="1" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="1" METHOD_NAME="LDAPATTRIBUTE" METHOD_SEQNO="1" PARAMETER_NAME="LDAP Version number" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="1" METHOD_NAME="PRECOMMIT" METHOD_SEQNO="1" PARAMETER_NAME="return" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="1" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="2" METHOD_NAME="DELETEROW" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="2" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="2" METHOD_NAME="LDAPATTRIBUTE" METHOD_SEQNO="1" PARAMETER_NAME="Host" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="2" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="return" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="2" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="return" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="2" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="3" METHOD_NAME="DELETEROW" METHOD_SEQNO="1" PARAMETER_NAME="PK" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="3" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PARAMETER_NAME="ATTRIBUTE_NAME" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="3" METHOD_NAME="LDAPATTRIBUTE" METHOD_SEQNO="1" PARAMETER_NAME="LDAP Port" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="3" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="3" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="SEQNO" KIND="OUT" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="3" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PARAMETER_NAME="ATTRIBUTE_NAME" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="4" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PARAMETER_NAME="ATTRIBUTE_VALUE" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="4" METHOD_NAME="LDAPATTRIBUTE" METHOD_SEQNO="1" PARAMETER_NAME="RootDN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="4" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="4" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="DN" KIND="OUT" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="4" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PARAMETER_NAME="ATTRIBUTE_VALUE" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="5" METHOD_NAME="INSERTROW" METHOD_SEQNO="1" PARAMETER_NAME="PK" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="5" METHOD_NAME="LDAPATTRIBUTE" METHOD_SEQNO="1" PARAMETER_NAME="User" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="5" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="ATTRIBUTE_NAME" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="5" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="ATTRIBUTE_NAME" KIND="OUT" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="5" METHOD_NAME="UPDATEROW" METHOD_SEQNO="1" PARAMETER_NAME="PK" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="6" METHOD_NAME="LDAPATTRIBUTE" METHOD_SEQNO="1" PARAMETER_NAME="Password" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="6" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="ATTRIBUTE_VALUE" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="6" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="ATTRIBUTE_VALUE" KIND="OUT" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="7" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="PK" KIND="IN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="LDAPATTRIBUTE" PARAMETER_SEQNO="7" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="PK" KIND="OUT" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
	</Parameters>
	<Query_Protocol_Associations documentName="Query Protocol Associations">
		<T_RDMI_QUERY_PROTOCOL COMPONENT_NAME="LDAP" PROTOCOL_NAME="QUERY" DESCRIPTION="" T_RDMI_QUERY_PROTOCOL="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_AGGREGATE_PROTOCOL="N" QP_EXE_METHOD_NAME="QUERYEXE" QP_EXE_COMPONENT_NAME="LDAP" QP_EXE_METHOD_SEQNO="1" QP_FETCH_COMPONENT_NAME="LDAP" QP_FETCH_METHOD_NAME="QUERYFETCH" QP_FETCH_METHOD_SEQNO="1"/>
		<T_RDMI_QUERY_PROTOCOL COMPONENT_NAME="LDAPATTRIBUTE" PROTOCOL_NAME="QUERY" DESCRIPTION="" T_RDMI_QUERY_PROTOCOL="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_AGGREGATE_PROTOCOL="N" QP_EXE_METHOD_NAME="QUERYEXE" QP_EXE_COMPONENT_NAME="LDAPATTRIBUTE" QP_EXE_METHOD_SEQNO="1" QP_FETCH_COMPONENT_NAME="LDAPATTRIBUTE" QP_FETCH_METHOD_NAME="QUERYFETCH" QP_FETCH_METHOD_SEQNO="1"/>
	</Query_Protocol_Associations>
	<Relationship_Columns documentName="Relationship Columns">
		<T_REF_COLUMNS TARGET_TABLE="LDAP" SOURCE_TABLE="LDAPATTRIBUTE" REF_ROLE="HAS" TARGET_COLUMN="DN" SOURCE_COLUMN="DN" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_REF_COLUMNS TARGET_TABLE="LDAP" SOURCE_TABLE="LDAPATTRIBUTE" REF_ROLE="HAS" TARGET_COLUMN="SEQNO" SOURCE_COLUMN="SEQNO" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
	</Relationship_Columns>
	<Relationships documentName="Relationships">
		<T_REF_TABLES TARGET_TABLE="LDAP" SOURCE_TABLE="LDAPATTRIBUTE" REF_ROLE="HAS" CO_ROLE="belongs to" ALIAS_TARGET="" REVERSE_MENU_LINE="Ldap has LDAP Attributes" MENU_LINE="LDAP Attributes belongs to Ldap" MANDATORY="Y" FK_CHECKPARTIAL="Y" LOCK_ON_FOREIGN_KEY_CHECK="Y" UPDATABLE="Y" TARGET_TOTAL="Y" MIN_NO_OF_CHILDREN="" MAX_NO_OF_CHILDREN="" LOOKUP_METHOD="T" DELETE_RULE="CAS" UPDATE_RULE="RES" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" REF_TYPE="REFERENCE"/>
	</Relationships>
	<Stateful_Components documentName="Stateful Components">
		<T_RDMI_STATEFUL_COMPONENT COMPONENT_NAME="LDAP" DESCRIPTION="For the policy and limitations regarding Off the Shelf components, refer to Help topic: Off the Shelf components.        &#10;&#10;You can use the LDAPTable component to connect to an LDAP server for accessing modifying information in directories. A directory is a specialized database optimized for reading, browsing and searching. LDAP stands for Lightweight Directory Access Protocol. As the name suggests, it is a lightweight protocol for accessing directory services, specifically X.500-based directory services.   &#10;The LDAP tableComponent is used together with LDAPAttribute. In order to work with LDAP you should import the LDAPAttribute tableComponent too. Their componentTables relate to each other as parent and child.&#10;&#10;The LDAP table component creates a connection to a directory service with the following parameters:   &#10;1-LDAP Version number.   &#10;2-Host: specifying the name of the LDAP directory server.   &#10;3-LDAP Port.   &#10;4-RootDN: the first or top-level entry is the root entry, e.g. dc=ness,dc=com.   &#10;5-User.   &#10;6-Password.   &#10;&#10;Therefore the constructor SQL has to specify the LDAP Version number, Host. LDAP Port, RootDN, User, Password.   &#10;NOTE: The LDAPATTRIBUTE tableComponent must have the same constructor-sql as the LDAP componentTable.&#10;&#10;Example of constructor SQL:       &#10;select        &#10;'&lt;LDAP Version number&gt;', (e.g. 3)       &#10;'&lt;Host&gt;',   (e.g. 'localhost')       &#10;'&lt;LDAP Port&gt;',  (e.g. 389)       &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')       &#10;'&lt;User&gt;',    (e.g. 'myUser')        &#10;'&lt;Password&gt;'    (e.g. 'myPassword')       &#10;&#10;After you have configured the constructor SQL fot both the LDAP component as for the LDAPATTRIBUTE component, don't forget to check both constructor SQL's on the 'State' tabpage and to save the changes.   &#10;&#10;You can specify LDAP user and password in the Authorizer. After creating a new user in the Authorizer selecting LDAP as validation agent, the Authorizer will validate the user's password credentials. &#10;  &#10;If you don't want users to query or edit other users passwords, you should configure slapd.config as follows:&#10;access to attr=userPassword&#10;&#9;by anonymous auth&#10;&#9;by self read&#10;&#9;by self write&#10;&#9;by dn=&quot;&lt;myDN&gt;&quot; write&#10;This way users won't have read access to other users passwords. See http://www.openldap.org/ for more details on configuration options for slapd.config.&#10;&#10;In order for the Application to be able to query, modify or add entries, their attributes and values in the LDAP directories, it's necessary for the LDAP directory server (slapd) to be running.   &#10;&#10;In the query field it's possible to query directories on specific attribute names. It's allowed to use search filters. Here's an example of how to use the search filter syntax:   &#10;        (cn=Common Name)   &#10;        (!(cn=Common Name))   &#10;        (&amp;(objectClass=Person)(|(sn=Surname)(cn=Common Na*)))   &#10;        (o=nes*euro*)   &#10;Search Filter Definition:   &#10;        and = &quot;&amp;&quot;   &#10;        or = &quot;|&quot;   &#10;        not = &quot;!&quot; filter   &#10;        equal= &quot;=&quot;   &#10;        approx= &quot;~=&quot;   &#10;        greater= &quot;&gt;=&quot;   &#10;        less = &quot;&lt;=&quot;   &#10;        any = &quot;*&quot;" T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="Y" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="N" T_RDMI_COMPONENT_CONSTRUCTOR="Y" LIFETIME="TRANSACTION" TRANSACTIONAL="Y" SUPPORTS_COMMIT="Y" SUPPORTS_ROLLBACK="Y" SUPPORTS_PRECOMMIT="Y" SUPPORTS_TABLECOMPONENT="Y" SUPPORTS_UPDATE="Y" SUPPORTS_INSERT="Y" SUPPORTS_DELETE="Y" SUPPORTS_CONDITIONS="N" SUPPORTS_ROWSETSIZEHINT="N"/>
		<T_RDMI_STATEFUL_COMPONENT COMPONENT_NAME="LDAPATTRIBUTE" DESCRIPTION="For the policy and limitations regarding Off the Shelf components, refer to Help topic: Off the Shelf components.&#10;&#10;LDAPATTRIBUTE is used together with the LDAP tableComponent.&#10;The LDAPATTRIBUTE tableComponent must have the same constructor-sql as the LDAP componentTable.&#10;&#10;Example of constructor SQL:       &#10;select        &#10;'&lt;LDAP Version number&gt;', (e.g. 3)       &#10;'&lt;Host&gt;',   (e.g. 'localhost')       &#10;'&lt;LDAP Port&gt;',  (e.g. 389)       &#10;'&lt;RootDN&gt;',   (e.g. 'dc=ness,dc=com')       &#10;'&lt;User&gt;',    (e.g. 'myUser')        &#10;'&lt;Password&gt;'    (e.g. 'myPassword')       &#10;&#10;After you have configured the constructor SQL fot both the LDAP component as for the LDAPATTRIBUTE component, don't forget to check the constructor SQL's on the 'State' tabpage and to save the changes." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="Y" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="N" T_RDMI_COMPONENT_CONSTRUCTOR="Y" LIFETIME="TRANSACTION" TRANSACTIONAL="Y" SUPPORTS_COMMIT="Y" SUPPORTS_ROLLBACK="Y" SUPPORTS_PRECOMMIT="Y" SUPPORTS_TABLECOMPONENT="Y" SUPPORTS_UPDATE="Y" SUPPORTS_INSERT="Y" SUPPORTS_DELETE="Y" SUPPORTS_CONDITIONS="N" SUPPORTS_ROWSETSIZEHINT="N"/>
	</Stateful_Components>
	<Tables documentName="Tables">
		<T_TABLE TABLE_NAME="LDAP" TABLE_SHORT="LDAP" OBJECT_NAME="Ldap" OBJECT_NAME_PLURAL="LdaP" KEYHIDDEN="N" CRETAB="N" UPDATED="Y" STATIC_TABLE="N" INIT_NR_OF_ROWS="1000" NEXT_NR_OF_ROWS="500" T_SUBT_SUPERTYPE="" T_SUBT_SEPARATE_TABLE="Y" DELETE_SUPER_ON_DELETE="Y" T_LOGICAL_VIEW="N" T_COMPONENT_TABLE="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" INTERFACE_SOURCE="" UNDER_VC="N" DELIVERABLE="N"/>
		<T_TABLE TABLE_NAME="LDAPATTRIBUTE" TABLE_SHORT="LDAPAT" OBJECT_NAME="LDAP Attribute" OBJECT_NAME_PLURAL="LDAP Attributes" KEYHIDDEN="N" CRETAB="N" UPDATED="Y" STATIC_TABLE="N" INIT_NR_OF_ROWS="1000" NEXT_NR_OF_ROWS="500" T_SUBT_SUPERTYPE="" T_SUBT_SEPARATE_TABLE="Y" DELETE_SUPER_ON_DELETE="Y" T_LOGICAL_VIEW="N" T_COMPONENT_TABLE="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" INTERFACE_SOURCE="" UNDER_VC="N" DELIVERABLE="N"/>
	</Tables>
</MultiImport>