<?xml version="1.0" encoding="UTF-8"?>
<?usoft-xml version="1.0" action="multi-tables-import"?>
<MultiImport>
	<Component_Constructors documentName="Component Constructors">
		<T_RDMI_COMPONENT_CONSTRUCTOR COMPONENT_NAME="OTS_FILE_WATCH" DESCRIPTION="This component will listen to file system events in a specified directory.&#13;&#10;Optionally, a file filter can also be specified.&#13;&#10;&#13;&#10;To start listening to file change events, e.g. in a directory c:\temp:&#13;&#10;&#13;&#10;select OTS_FILE_WATCH.Start('c:\temp\', '')&#13;&#10;&#13;&#10;To start listening to txt files only:&#13;&#10;&#13;&#10;select OTS_FILE_WATCH.Start('c:\temp\', '*.txt')&#13;&#10;&#13;&#10;To see results:&#13;&#10;&#13;&#10;invoke OTS_FILE_WATCH.query with select ''&#13;&#10;&#13;&#10;A query only component table can be created for this component." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" CONSTRUCTOR_SQL="" ACTIVE="N"/>
	</Component_Constructors>
	<Components documentName="Components">
		<T_RDMI_COMPONENT COMPONENT_NAME="OTS_FILE_WATCH" DESCRIPTION="This component will listen to file system events in a specified directory.&#13;&#10;Optionally, a file filter can also be specified.&#13;&#10;&#13;&#10;To start listening to file change events, e.g. in a directory c:\temp:&#13;&#10;&#13;&#10;select OTS_FILE_WATCH.Start('c:\temp\', '')&#13;&#10;&#13;&#10;To start listening to txt files only:&#13;&#10;&#13;&#10;select OTS_FILE_WATCH.Start('c:\temp\', '*.txt')&#13;&#10;&#13;&#10;To see results:&#13;&#10;&#13;&#10;invoke OTS_FILE_WATCH.query with select ''&#13;&#10;&#13;&#10;A query only component table can be created for this component." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y"/>
	</Components>
	<DotNet_Components documentName="DotNet Components">
		<T_RDMI_DOTNET_COMPONENT COMPONENT_NAME="OTS_FILE_WATCH" DESCRIPTION="This component will listen to file system events in a specified directory.&#13;&#10;Optionally, a file filter can also be specified.&#13;&#10;&#13;&#10;To start listening to file change events, e.g. in a directory c:\temp:&#13;&#10;&#13;&#10;select OTS_FILE_WATCH.Start('c:\temp\', '')&#13;&#10;&#13;&#10;To start listening to txt files only:&#13;&#10;&#13;&#10;select OTS_FILE_WATCH.Start('c:\temp\', '*.txt')&#13;&#10;&#13;&#10;To see results:&#13;&#10;&#13;&#10;invoke OTS_FILE_WATCH.query with select ''&#13;&#10;&#13;&#10;A query only component table can be created for this component." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" ASSEMBLYREFS="System.Xml.dll" PROGRAM_SOURCE="using System;&#13;&#10;using System.IO;&#13;&#10;using System.Text;&#13;&#10;using System.Collections.Generic;&#13;&#10;using System.Data;&#13;&#10;&#13;&#10;public class OTS_FILE_WATCH &#13;&#10;{&#13;&#10;&#9;private DataTable m_table = new DataTable();&#13;&#10;&#9;private static FileSystemWatcher m_watcher = null;&#13;&#10;&#9;private int m_seqno = 0;&#13;&#10;&#9;private readonly object m_sync = new object();&#13;&#10;&#9;private int m_row_number = 0;&#13;&#10;&#13;&#10;&#9;public OTS_FILE_WATCH()&#13;&#10;&#9;{&#13;&#10;&#9;&#9;m_table.Columns.Add(&quot;seqno&quot;, typeof(int));&#13;&#10;&#9;&#9;m_table.Columns.Add(&quot;path&quot;, typeof(string));&#13;&#10;&#9;&#9;m_table.Columns.Add(&quot;changetype&quot;, typeof(string));&#13;&#10;&#9;&#9;m_table.Columns.Add(&quot;oldname&quot;, typeof(string));&#13;&#10;&#9;}&#13;&#10;&#9;public void Start(string path, string filterpath) &#13;&#10;&#9;{&#13;&#10;&#9;&#9;if(m_watcher!=null)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;m_watcher.Dispose();&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;m_table.Clear();&#13;&#10;&#9;&#9;m_seqno = 0;&#13;&#10;&#9;&#9;m_watcher = new FileSystemWatcher();&#13;&#10;&#9;&#9;m_watcher.Path = Path.GetDirectoryName(path);&#13;&#10;&#9;&#9;if(!string.IsNullOrEmpty(filterpath))&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;m_watcher.Filter = Path.GetFileName(filterpath);&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;m_watcher.NotifyFilter = NotifyFilters.LastWrite | NotifyFilters.FileName | NotifyFilters.Size;&#13;&#10;&#9;&#9;//  NotifyFilters.LastAccess  NotifyFilters.DirectoryName&#13;&#10;&#9;&#9;// m_watcher.Filter = &quot;*.txt&quot;;&#13;&#10;&#9;&#9;m_watcher.Deleted += new System.IO.FileSystemEventHandler(OnDelete);&#13;&#10;&#9;&#9;m_watcher.Renamed += new System.IO.RenamedEventHandler(OnRenamed);&#13;&#10;&#9;&#9;m_watcher.Changed += new System.IO.FileSystemEventHandler(OnChanged);&#13;&#10;&#9;&#9;m_watcher.Created += new System.IO.FileSystemEventHandler(OnCreate);&#13;&#10;&#9;&#9;m_watcher.EnableRaisingEvents = true;&#13;&#10;&#9;}&#13;&#10;&#9;private void OnChanged(object source, FileSystemEventArgs e)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;lock (m_sync)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;DataRow dr = m_table.NewRow();&#13;&#10;&#9;&#9;&#9;dr[0] = m_seqno++;&#13;&#10;&#9;&#9;&#9;dr[1] = e.FullPath;&#13;&#10;&#9;&#9;&#9;dr[2] = e.ChangeType.ToString();&#13;&#10;&#9;&#9;&#9;m_table.Rows.Add(dr);&#13;&#10;&#9;&#9;&#9;m_table.AcceptChanges();&#13;&#10;&#9;&#9;}&#13;&#10;&#9;}&#13;&#10;&#9;private void OnRenamed(object source, RenamedEventArgs e)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;lock (m_sync)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;DataRow dr = m_table.NewRow();&#13;&#10;&#9;&#9;&#9;dr[0] = m_seqno++;&#13;&#10;&#9;&#9;&#9;dr[1] = e.FullPath;&#13;&#10;&#9;&#9;&#9;dr[2] = e.ChangeType.ToString();&#13;&#10;&#9;&#9;&#9;dr[3] = e.OldName;&#13;&#10;&#9;&#9;&#9;m_table.Rows.Add(dr);&#13;&#10;&#9;&#9;&#9;m_table.AcceptChanges();&#13;&#10;&#9;&#9;}&#13;&#10;&#9;}&#13;&#10;&#9;private void OnDelete(object source, FileSystemEventArgs e)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;lock (m_sync)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;DataRow dr = m_table.NewRow();&#13;&#10;&#9;&#9;&#9;dr[0] = m_seqno++;&#13;&#10;&#9;&#9;&#9;dr[1] = e.FullPath;&#13;&#10;&#9;&#9;&#9;dr[2] = e.ChangeType.ToString();&#13;&#10;&#9;&#9;&#9;dr[3] = string.Empty;&#13;&#10;&#9;&#9;&#9;m_table.Rows.Add(dr);&#13;&#10;&#9;&#9;&#9;m_table.AcceptChanges();&#13;&#10;&#9;&#9;}&#13;&#10;&#9;}&#13;&#10;&#9;private void OnCreate(object source, FileSystemEventArgs e)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;lock (m_sync)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;DataRow dr = m_table.NewRow();&#13;&#10;&#9;&#9;&#9;dr[0] = m_seqno++;&#13;&#10;&#9;&#9;&#9;dr[1] = e.FullPath;&#13;&#10;&#9;&#9;&#9;dr[2] = e.ChangeType.ToString();&#13;&#10;&#9;&#9;&#9;dr[3] = string.Empty;&#13;&#10;&#9;&#9;&#9;m_table.Rows.Add(dr);&#13;&#10;&#9;&#9;&#9;m_table.AcceptChanges();&#13;&#10;&#9;&#9;}&#13;&#10;&#9;}&#13;&#10;&#9;public int QueryExe(string conditions)&#13;&#10;&#9;{&#13;&#10;        m_row_number = 0;&#13;&#10;&#9;&#9;return 1;&#13;&#10;&#9;}&#13;&#10;&#9;public int QueryFetch(out int seqno, out string fullpath, out string changetype, out string oldpath)&#13;&#10;&#9;{&#13;&#10;&#9;&#9;seqno = -1;&#13;&#10;&#9;&#9;fullpath = changetype = oldpath = string.Empty;&#13;&#10;&#9;&#9;DataRow row = null;&#13;&#10;&#9;&#9;if(m_row_number &gt;= m_table.Rows.Count)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;return 0;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;lock (m_sync)&#13;&#10;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;row = m_table.Rows[m_row_number++];&#13;&#10;&#9;&#9;&#9;if (row == null)&#13;&#10;&#9;&#9;&#9;{&#13;&#10;&#9;&#9;&#9;&#9;return 0;&#13;&#10;&#9;&#9;&#9;}&#13;&#10;&#9;&#9;&#9;seqno =(int)row[m_table.Columns[0]];&#13;&#10;&#9;&#9;&#9;fullpath =(string)row[m_table.Columns[1]];&#13;&#10;&#9;&#9;&#9;changetype = (row[m_table.Columns[2]].GetType() == typeof(string)) ? (string)row[m_table.Columns[2]] : string.Empty;&#13;&#10;&#9;&#9;&#9;oldpath = (row[m_table.Columns[3]].GetType() == typeof(string)) ? (string)row[m_table.Columns[3]] : string.Empty;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;return 1;&#13;&#10;&#9;}&#13;&#10;}" DOTNET_ACTIVE="Y"/>
	</DotNet_Components>
	<Methods documentName="Methods">
		<T_RDMI_METHOD COMPONENT_NAME="OTS_FILE_WATCH" METHOD_NAME="OTS_FILE_WATCH" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="OTS_FILE_WATCH" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="OTS_FILE_WATCH" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="QueryExe" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="OTS_FILE_WATCH" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="QueryFetch" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_METHOD COMPONENT_NAME="OTS_FILE_WATCH" METHOD_NAME="START" METHOD_SEQNO="1" PHYSICAL_METHOD_NAME="Start" DESCRIPTION="" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
	</Methods>
	<Parameters documentName="Parameters">
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="0" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_QueryExe" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="0" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="Return_From_QueryFetch" KIND="RETURN" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="1" METHOD_NAME="QUERYEXE" METHOD_SEQNO="1" PARAMETER_NAME="conditions" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="1" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="seqno" KIND="OUT" PRIMITIVE_DATA_TYPE="LONG" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="1" METHOD_NAME="START" METHOD_SEQNO="1" PARAMETER_NAME="path" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="2" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="fullpath" KIND="OUT" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="2" METHOD_NAME="START" METHOD_SEQNO="1" PARAMETER_NAME="filterpath" KIND="IN" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="3" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="changetype" KIND="OUT" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
		<T_RDMI_PARAMETER COMPONENT_NAME="OTS_FILE_WATCH" PARAMETER_SEQNO="4" METHOD_NAME="QUERYFETCH" METHOD_SEQNO="1" PARAMETER_NAME="oldpath" KIND="OUT" PRIMITIVE_DATA_TYPE="STRING" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y"/>
	</Parameters>
	<Query_Protocol_Associations documentName="Query Protocol Associations">
		<T_RDMI_QUERY_PROTOCOL COMPONENT_NAME="OTS_FILE_WATCH" PROTOCOL_NAME="QUERY" DESCRIPTION="" T_RDMI_QUERY_PROTOCOL="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_AGGREGATE_PROTOCOL="N" QP_EXE_METHOD_NAME="QUERYEXE" QP_EXE_COMPONENT_NAME="OTS_FILE_WATCH" QP_EXE_METHOD_SEQNO="1" QP_FETCH_COMPONENT_NAME="OTS_FILE_WATCH" QP_FETCH_METHOD_NAME="QUERYFETCH" QP_FETCH_METHOD_SEQNO="1"/>
	</Query_Protocol_Associations>
	<Stateful_Components documentName="Stateful Components">
		<T_RDMI_STATEFUL_COMPONENT COMPONENT_NAME="OTS_FILE_WATCH" DESCRIPTION="This component will listen to file system events in a specified directory.&#13;&#10;Optionally, a file filter can also be specified.&#13;&#10;&#13;&#10;To start listening to file change events, e.g. in a directory c:\temp:&#13;&#10;&#13;&#10;select OTS_FILE_WATCH.Start('c:\temp\', '')&#13;&#10;&#13;&#10;To start listening to txt files only:&#13;&#10;&#13;&#10;select OTS_FILE_WATCH.Start('c:\temp\', '*.txt')&#13;&#10;&#13;&#10;To see results:&#13;&#10;&#13;&#10;invoke OTS_FILE_WATCH.query with select ''&#13;&#10;&#13;&#10;A query only component table can be created for this component." T_RDMI_AUTOMATION_SERVER="N" T_RDMI_JAVA_COMPONENT="N" T_RDMI_STATEFUL_COMPONENT="Y" INTERFACE="N" MODULE="" INTERFACE_CORRECT="Y" T_RDMI_WEB_SERVICE_COMPONENT="N" T_RDMI_DOTNET_COMPONENT="Y" T_RDMI_COMPONENT_CONSTRUCTOR="Y" LIFETIME="SESSION" TRANSACTIONAL="N" SUPPORTS_COMMIT="N" SUPPORTS_ROLLBACK="N" SUPPORTS_PRECOMMIT="N" SUPPORTS_TABLECOMPONENT="N" SUPPORTS_UPDATE="N" SUPPORTS_INSERT="N" SUPPORTS_DELETE="N" SUPPORTS_CONDITIONS="N" SUPPORTS_ROWSETSIZEHINT="N"/>
	</Stateful_Components>
</MultiImport>